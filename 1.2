////////////////////////////////////////////////////////////////////////////////////
//Rectangle.h

#pragma once

class Rectangle
{
private:
	float height, width;

public:
	float GetHeight() const { return height; }
	float GetWidth() const { return width; }
	void SetHeight(float value);
	void SetWidth(float value);

	bool Init(float x, float y);
	void Display() const;
	void Read();

	void Area();
	void Perimeter();
};

////////////////////////////////////////////////////////////////////////////////////
//Rectangle.cpp

#include "Rectangle.h"
#include <iostream>

using namespace std;

void Rectangle::SetHeight(float value)
{
	height = value;
}

void Rectangle::SetWidth(float value)
{
	width = value;
}

bool Rectangle::Init(float x, float y)
{
	if (x > 0 && y > 0)
	{
		height = x;
		width = y;
		return true;
	}
	else
	{
		return false;
	}
}

void Rectangle::Display() const
{
	cout << endl;
	cout << "height = " << height << endl;
	cout << "width = " << width << endl;
}

void Rectangle::Read()
{
	float x, y;
	do
	{
		cout << "Input complex value: " << endl;
		cout << "height = "; cin >> x;
		cout << "width = "; cin >> y;
	} while (!Init(x, y));
}

void Rectangle::Area()
{
	double a;
	a = height * width;
	cout << "a = " << a << endl;
}

void Rectangle::Perimeter()
{
	double p;
	p = 2 * (height + width);
	cout << "p = " << p << endl;
}
//////////////////////////////////////////////////////////////////////////////////////Source.cpp
#include <iostream>
#include "Rectangle.h"

using namespace std;

Rectangle makeRectangle(float x, float y)
{
	Rectangle r;
	if (!r.Init(x, y))
		cout << "Wrong length parametrs" << endl;
	return r;
}

int main()
{
	Rectangle r1, r2, r;

	cout << "Rectangle1" << endl;
	r1.Read();
	r1.Display();
	r1.Area();
	r1.Perimeter();

	cout << endl;
	cout << "Rectangle2" << endl;
	r2.SetHeight(2);
	r2.SetWidth(3);

	r2.GetHeight();
	r2.GetWidth();
	r2.Area();
	r2.Perimeter();

	cout << endl;
	cout << "Rectangle3" << endl;
	float x, y;
	cout << "height = "; cin >> x;
	cout << "width = "; cin >> y;
	r = makeRectangle(x, y);
	r.Display();
	r.Area();
	r.Perimeter();

	return 0;
}
