////////////////////////////////////////////////////////////////////////////////////
//IntPower.h

#pragma once

class IntPower
{
private:
	float first;
	int second;

public:
	float GetFirst() const { return first; }
	int GetSecond() const { return second; }
	void SetFirst(float value);
	void SetSecond(int value);

	bool Init(float x, int y);
	void Display() const;
	void Read();

	void power();
};
////////////////////////////////////////////////////////////////////////////////////
//IntPower.cpp

#include "IntPower.h"
#include <iostream>

using namespace std;

void IntPower::SetFirst(float value)
{
	first = value;
}

void IntPower::SetSecond(int value)
{
	second = value;
}

bool IntPower::Init(float x, int y)
{
	if (x != 0)
	{
		first = x;
		second = y;
		return true;
	}
	else
	{
		return false;
	}
}

void IntPower::Display() const
{
	cout << endl;
	cout << "first = " << first << endl;
	cout << "second = " << second << endl;
}

void IntPower::Read()
{
	float x; 
	int y;
	do
	{
		cout << "Input complex value: " << endl;
		cout << "first = "; cin >> x;
		cout << "second = "; cin >> y;

	} while (!Init(x, y));
}

void IntPower::power()
{
	double z;
	z = pow(first, second);
	cout << "z = " << z << endl;
}

//////////////////////////////////////////////////////////////////////////////////////Source.cpp
#include <iostream>
#include "IntPower.h"

using namespace std;

IntPower makeIntPower(float x, int y)
{
	IntPower ip;
	if (!ip.Init(x, y))
		cout << "Wrong length parametrs" << endl;
	return ip;
}

int main()
{
	IntPower ip1, ip2, ip;

	cout << "IntPower1" << endl;
	ip1.Read();
	ip1.Display();
	ip1.power();

	cout << endl;
	cout << "IntPower2" << endl;
	ip2.SetFirst(2);
	ip2.SetSecond(4);
	
	ip2.GetFirst();
	ip2.GetSecond();
	ip2.power();

	cout << endl;
	cout << "IntPower3" << endl;
	float x;
	int y;
	cout << "first = "; cin >> x;
	cout << "second = "; cin >> y;
	ip = makeIntPower(x, y);
	ip.Display();
	ip.power();

	return 0;
}

